openapi: "3.0.3"

info:
  title: "NU-api"
  description: nu-wikiのAPIです
  version: 0.0.1

servers:
  - url: "http://localhost:8080"
    description: "ローカル環境"

tags:
  - name: file
    description: pdfの操作

components:
  parameters:
    fileType:
      name: "type"
      in: "query"
      description: "過去問or過去問の解答orその他"
      required: true
      schema:
        type: string
        enum: 
          - past_exam
          - past_exam_answer
          - other
    fileUserId:
      name: "user_id"
      in: "query"
      description: "ユーザーID"
      required: true
      schema:
        type: string
    fileExamId:
      name: "exam_id"
      in: "query"
      description: "試験ID"
      required: true
      schema:
        type: string
  schemas:
    lecture:
      type: object
      description: 講義の詳細
      properties:
        name: { type: string, example: "論理設計及び演習" }
        teacherName: { type: string, example: "山田太郎" }
        grade: { type: integer, example: 1 }
        year: { type: integer, example: 2022 }
        term: { type: string, example: "春" }
        departmentId: { type: integer, example: 1 }
paths:
  "/":
    get:
      summary: test
      deprecated: false
      responses:
        "200":
          description: "OK"
          content:
            "application/json":
              schema:
                type: object
                properties:
                  message: { type: string, example: "happy new year" }
  "/files":
    get:
      summary: "pdf一覧の取得"
      tags: ["file"]
      deprecated: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    fileId: { type: string, example: "xxxxxx-xxxxx" }
                    name:
                      { type: string, example: "論理設計及び演習2022期末.pdf" }
    post:
      summary: "新しい講義資料のアップロード"
      tags: ["file"]
      deprecated: false
      requestBody:
        description: "講義と講義のテストを指定して講義資料をアップロードする"
        required: true
        content:
          application/pdf:
            schema:
              type: string
              format: binary
      parameters:
        - $ref: "#/components/parameters/fileType"
        - $ref: "#/components/parameters/fileUserId"
        - $ref: "#/components/parameters/fileExamId"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId: { type: string, example: "xxxxxx-xxxxxx" }
  "/files/{file-id}":
    put:
      summary: "pdfの更新"
      tags: ["file"]
      deprecated: false
      responses:
        "200":
          description: "OK"
      requestBody:
        description: "pdfファイル"
        required: true
        content:
          application/pdf:
            schema:
              type: string
              format: binary
      parameters:
        - name: file-id
          in: path
          schema: { type: string }
          required: true
    delete:
      summary: "pdfの削除"
      tags: ["file"]
      deprecated: false
      responses:
        "200":
          description: "OK"
      parameters:
        - name: file-id
          in: path
          schema: { type: string }
          required: true
  "/lectures":
    post:
      summary: "新しい講義の追加"
      tags: ["lectures"]
      deprecated: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
      requestBody:
        description: "講義の名前"
        required: true
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/lecture"
