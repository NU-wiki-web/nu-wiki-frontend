openapi: "3.0.3"

info:
  title: "NU-api"
  description: nu-wikiのAPIです
  version: 0.0.1

servers:
  - url: "http://localhost:8080"
    description: "ローカル環境"

tags:
  - name: file
    description: pdfの操作

paths:
  "/":
    get:
      summary: test
      deprecated: false
      responses:
        "200":
          description: "OK"
          content:
            "application/json":
              schema:
                type: object
                properties:
                  message: { type: string, example: "happy new year" }
  "/files":
    get:
      summary: "pdf一覧の取得"
      tags: ["file"]
      deprecated: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    file_id: { type: string, example: "xxxxxx-xxxxx" }
                    name: { type: string, example: "論理設計及び演習2022期末.pdf" }
  "/file":
    post:
      summary: "pdfのアップロード"
      tags: ["file"]
      deprecated: false
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_id: { type: string, example: "xxxxxx-xxxxxx" }
      requestBody:
        description: "pdfファイル"
        required: true
        content:
          application/pdf:
            schema:
              type: string
              format: binary
  "/file/{file_id}":
    put:
      summary: "pdfの更新"
      tags: ["file"]
      deprecated: false
      responses:
        "200":
          description: "OK"
      requestBody:
        description: "pdfファイル"
        required: true
        content:
          application/pdf:
            schema:
              type: string
              format: binary
      parameters:
        - name: file_id
          in: path
          schema: { type: string }
          required: true
    delete:
      summary: "pdfの削除"
      tags: ["file"]
      deprecated: false
      responses:
        "200":
          description: "OK"
      parameters:
        - name: file_id
          in: path
          schema: { type: string }
          required: true
      requestBody:
        description: "pdfファイル"
        required: true
        content:
          application/pdf:
            schema:
              type: string
              format: binary
  "/lectures":
    get:
      tags:
        - lectures
      summary: "講義を全て取得"
      deprecated: false
      responses:
        "200":
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                properties:
                  lectures:
                    type: array
                    items:
                      properties:
                        id: { type: number, example: 1 }
                        name: { type: string, example: "有機化学3" }
                        teacherName: { type: string, example: "田中角栄" }
                        grade: { type: string, example: "B2" }
                        year: { type: number, example: 2018 }
                        term: { type: string, example: "春2" }
                        departmentId: { type: number, example: 3 }
                  total:
                    type: number
                    example: 1
  "/lectures/search":
    post:
      tags:
        - lectures
      summary: "講義検索"
      deprecated: false
      responses:
        "200":
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                properties:
                  lectures:
                    type: array
                    items:
                      properties:
                        id: { type: number, example: 1 }
                        name: { type: string, example: "量子化学3" }
                        teacherName: { type: string, example: "田中角栄" }
                        grade: { type: string, example: "B2" }
                        year: { type: number, example: 2018 }
                        term: { type: string, example: "春2" }
                        departmentId: { type: number, example: 3 }
                  total:
                    type: number
                    example: 2
      requestBody:
        description: "絞り込み"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                grade: { type: string, example: "B2" }
                year: { type: number, example: 2016 }
                term: { type: string, example: "秋2" }
                departmentId: { type: number, example: 8 }
                word: { type: string, example: "量子" }
